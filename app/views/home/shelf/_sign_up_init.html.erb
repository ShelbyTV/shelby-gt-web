<div class="shelby-header shelby-header--onboarding onboarding__header">
  <span class="shelby_logo">
    <span class="icon-mark"></span><span class="icon-type"></span><span class="ir">Shelby.tv</span>
  </span>
</div>

<section class="onboarding__wrapper js-onboarding-pane clearfix">
  <section class="onboarding__lining onboarding__lining--init-signup">
    <div class="onboarding__head">
      <h3 class="onboarding__h3">
        Step 1 of 2
      </h3>

      <h1 class="onboarding__h1">
        Shelby turns the web into your personal TV channel
      </h1>
    </div><!-- eo onboarding__head -->

    <div class="onboarding__body onboarding__body--auth<% if @nickname_error and @email_error %> hidden<% end %> js-signup-auth">
      <h2 class="onboarding__h2">
        Sign up with
      </h2>
      <a
        href="<%= "#{Settings::ShelbyAPI.url}/auth/facebook" %>"
        class="button_primer button_standard button_facebook-blue onboarding__button--social one-quarter js-track-event js-authorize"
        data-ga_action="Signup with Twitter"
        data-popup_height="700"
        data-popup_width="600">
          <span class="icon icon-facebook"></span> Facebook
      </a>

      <a
        href="<%= "#{Settings::ShelbyAPI.url}/auth/twitter" %>"
        class="button_primer button_standard button_twitter-blue onboarding__button--social one-quarter js-track-event js-authorize"
        data-ga_action="Signup with Facebook"
        data-popup_height="650"
        data-popup_width="1000">
          <span class="icon icon-twitter"></span> Twitter
      </a>

      <hr class="hr hr--double" />

      <p class="onboarding__block">
        or, use <a href="#" class="onboarding__anchor js-signup-with-email js-track-event" data-ga_action="Signup with Email">your email address.</a>
      </p>
    </div><!-- eo onboarding__body -->
    <div class="onboarding__body onboarding__body--email<% if !@nickname_error and !@email_error %> hidden<% end %>  js-signup-email">
      <form accept-charset="UTF-8" action="<%= Settings::ShelbyAPI.signup_form_url %>" method="post" class="form_module js-invite-form">
        <fieldset class="form_fieldset js-invite-name">
          <label for="signup-name" class="form_label">Full Name</label>
          <p class="form_error hidden js-invite-name-error">Please enter your name</p>
          <input name="user[name]" type="text" class="form_input" id="signup-name" placeholder="First and Last Name" value="<%= cookies[:_shelby_signup_name] %>" autofocus />
        </fieldset>

        <fieldset class="form_fieldset<% if @nickname_error %> form_fieldset--error<% end %> js-invite-username">
          <label for="signup-username" class="form_label">Username</label>
          <p class="form_error<% if !@nickname_error %> hidden<% end %> js-invite-username-error"><% if @nickname_error %>Username taken<% else %>Please enter a username<% end %></p>
          <input name="user[nickname]" type="text" class="form_input" id="signup-username" />
       </fieldset>

        <fieldset class="form_fieldset<% if @email_error %> form_fieldset--error<% end %> js-invite-email">
          <label for="signup-email" class="form_label">Email Address</label>
          <p class="form_error<% if !@email_error %> hidden<% end %>  js-invite-email-error"><% if @email_error %>Email already in use<% else %>Please enter an email address<% end %></p>
          <input name="user[primary_email]" type="text" class="form_input" id="signup-email" placeholder="email@address.com" value="<%= cookies[:_shelby_signup_email] %>" />
        </fieldset>

        <fieldset class="form_fieldset js-invite-password">
          <label for="signup-password" class="form_label">Password</label>
          <p class="form_error hidden js-invite-password-error">Please enter a password</p>
          <input name="user[password]" type="password" class="form_input" id="signup-password" placeholder="•••••••" />
        </fieldset>

        <% #support invitations system from within the app %>
        <% if @invite_id %>
          <input name="invite_id" id="signup-invite-id" type="hidden" value="<%= @invite_id %>" />
        <% end %>

        <fieldset class="form_fieldset form_fieldset--submit">
          <button class="button_primer button_standard button_gray onboarding__button form_submit js-create-account">
            Create Account
          </button>
        </fieldset>

        <p class="onboarding__block">
          or, authenticate using <a href="#" class="onboarding__anchor js-signup-with-email js-track-event" data-ga_action="Signup with Social Auth">Facebook or Twitter</a>
        </p>
      </form>

    </div><!-- eo onboarding__body -->
  </section><!-- eo onboarding__lining--init-signup -->
</section><!-- eo .content_lining -->

<script>
$(document).ready(function(){
  $('.js-signup-with-email').on('click', function(e){
    e.preventDefault();
    $('.onboarding__body--auth, .onboarding__body--email').toggleClass('hidden');
  });

  $('.form_fieldset').on('keyup', function(e){
    if($(this).hasClass('form_fieldset--error')) {
      $(this).toggleClass('form_fieldset--error',false).find('.form_error').toggleClass('hidden',true);
    }
  });

  var hasErrors = false;
  var signupName = $('#signup-name');
  var signupUsername = $('#signup-username');
  var signupEmail = $('#signup-email');

  var validateForm = function(e){
      hasErrors = false;

      // validate user full name
      if(!signupName.val().length) {
        $('.js-invite-name').addClass('form_fieldset--error')
                            .find('.form_error')
                            .toggleClass('hidden', false)
                            .text('Please enter your name');
        hasErrors = true;
      } else {
        $('.js-invite-name')
                            .find('.form_error')
                            .toggleClass('hidden', true);

      }

      // validate username
      if(!signupUsername.val().length) {
        $('.js-invite-username').addClass('form_fieldset--error')
                                .find('.form_error')
                                .toggleClass('hidden', false)
                                .text('Please enter a username');
        hasErrors = true;
      } else {
        $('.js-invite-username')
                            .find('.form_error')
                            .toggleClass('hidden', true);

      }

      // validate password
      // var password
      if($('#signup-password').val().length < shelby.config.user.password.minLength) {
        $('.js-invite-password').addClass('form_fieldset--error')
                                .find('.form_error')
                                .toggleClass('hidden', false)
                                .text('Password must be at least ' + shelby.config.user.password.minLength + ' characters long');

        hasErrors = true;
      } else {
        $('.js-invite-password')
                            .find('.form_error')
                            .toggleClass('hidden', true);
      }
      // validate email
      if(!signupEmail.val().length || signupEmail.val().search(shelby.config.user.email.validationRegex) == -1) {
        $('.js-invite-email').addClass('form_fieldset--error')
                             .find('.form_error')
                             .toggleClass('hidden', false)
                             .text('Please enter a valid email.');

        hasErrors = true;
      } else {
        $('.js-invite-email')
                            .find('.form_error')
                            .toggleClass('hidden', true);
      }

      if (hasErrors) {
        e.preventDefault();
        $('.js-create-account')
          .toggleClass('button_green',false)
          .toggleClass('button_gray', true);

      } else {
        // save the user's input in a session cookie so we can re-render it if API redirects us back
        // here with errors the user needs to fix
        cookies.set('_shelby_signup_name', signupName.val());
        cookies.set('_shelby_signup_username', signupUsername.val());
        cookies.set('_shelby_signup_email', signupEmail.val());
      }
  }

  $('.form_input').on('keyup',function(e){
    if($('#signup-password').val().length >= shelby.config.user.password.minLength) {
      validateForm(e);

      if(!hasErrors){
        $('.js-create-account')
          .toggleClass('button_gray', false)
          .toggleClass('button_green',true);
      }
    } else {
      $('.js-create-account')
        .toggleClass('button_green',false)
        .toggleClass('button_gray', true);
    }
  });

  $('.js-invite-form').on('submit', function(e){
      validateForm(e);
    }).find('.form_input').on('blur', function(){
      $this = $(this);

      if(!$this.val().length) {
        $this.removeClass('filled');
      } else {
        $this.addClass('filled');
      }
    });

});
</script>
