<script>
  <% if ("production" == Rails.env or "staging" == Rails.env) %>
    //Track loading of landing page separate from loading of app -->
    var shortLink = $.getUrlParam('awesm');
    if (typeof viaShortLink != 'undefined') { shortLink = 'via Short Link: ' + shortLink; }
    else { shortLink = "Direct"; }
    var _gaq=[['_setAccount','<%= Settings::GoogleAnalytics.code %>'],['_setDomainName','shelby.tv'],['_setCustomVar', 1, 'Visit Type', shortLink, 3],['_trackPageview']];
    (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];
    g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
    s.parentNode.insertBefore(g,s);}(document,'script'));
  <% end %>

  <% if Rails.env == 'production' %>
    var _kmq = _kmq || [];
    var _kmk = _kmk || '9b8c2d291a85a66412fc8c0085125194646fd7a6';
    function _kms(u){
      setTimeout(function(){
        var d = document, f = d.getElementsByTagName('script')[0],
        s = d.createElement('script');
        s.type = 'text/javascript'; s.async = true; s.src = u;
        f.parentNode.insertBefore(s, f);
      }, 1);
    }
    _kms('//i.kissmetrics.com/i.js');
    _kms('//doug1izaerwt3.cloudfront.net/' + _kmk + '.1.js');

    var action = "Visit "+shelbyTrackingCategory;
    var shortLink = $.getUrlParam('awesm');
    if (typeof shortLink != 'undefined') {  action += ' via Short Link'; }
    else { shortLink = null; }
    _kmq.push(['record', action, {shortLink: shortLink}]);
  <% end %>

  $(document).ready(function(e){
    var currentShelf;
    var listenScroll = true;
    var scroll = function(e){
      $.event.trigger(e.originalEvent.wheelDelta > 0 ? 'previousSlide' : 'nextSlide');
    };

    $(this).on('mousewheel DOMMouseScroll MozMousePixelScroll',function(e){
      if(listenScroll) {
        scroll(e);
      }
    }).on('transitionend', function(e){
      console.log('te',$(e.originalEvent.target));
    });

    try {
      _gaq.push(['_trackEvent', 'Landing Page', 'Visit']);
    } catch(e) {}

    //button cache
    var $doc              = $('html,body'),
        $header           = $('.js-header'),
        $iphone           = $('.js-iphone');
        $iphoneSouth      = $('.js-iphone-south'),
        $iphoneViewport   = $iphone.find('.js-iphone-viewport')
        $target           = $('.js-target'),
        $horizontalIphone = $('.js-horz-iphone'),
        $nav              = $('.js-slide-navigator'),
        isHorizontal      = false,
        listening         = true;

    var shelf = {
      $cta    : $('#intro'),
      $iphone : $('#iphone'),
      $press  : $('#press'),
      $social : $('#social'),
      $stream : $('#stream')
    };

    var FANCY = {
      _headerHeight : 69, //offset by the height of the header.

      // jQuery.animate() specific configuration/defaults
      config : {
        _activeClass : 'list__item--selected', // className to indicate active slide of carousel.

        settings : {
          scrollTop : 0,
        },
        speed    : 800,
        callback : function(data){
          console.log('animateCallback');
          // bindable. for fancy interactions.
          $.event.trigger('slideChanged',data);

          var index = data.$target.index(); // offset by index of shelf__wrapper--cta (that's the first slide);
          $nav.children().removeClass(this._activeClass).eq(index).addClass(this._activeClass);
        }
      },

      beforeChange : function($target) {
        $.event.trigger('beforeChange', $target);
      },

      autoScroll : function($target,$prevTarget){
        var destination = $target.offset().top - this._headerHeight;

        this.config.settings.scrollTop = destination;

        var data = {
          scrollTop   : destination,
          $prevTarget : $prevTarget,
          $target     : $target
        }

        /*
          bind an element to the "beforeChange" event for immediate handling.
          otherwise, use the animate callback event, "slideChanged"
        */
        this.beforeChange(data);

        var self = this;

        $doc.animate(this.config.settings,this.config.speed,function(){ self.config.callback(data) });
      }
    };



    $iphone.on('beforeChange',function(e,data){
      switch(data.$target[0]) {
        case shelf.$cta[0] :
        case shelf.$stream[0] :
          $.event.trigger('isHorizontal',true);
          $(this).toggleClass('iphone--horizontal',false);
        break;
        case shelf.$social[0] :
          $(this).toggleClass('iphone--horizontal',true);
        break;
      }
    }).on('transitionend', function(){
      $.event.trigger('isHorizontal',false)
    });

    $iphoneSouth.on('isHorizontal', function(e,isHorizontal){
      $(this).toggleClass('cloaked',isHorizontal);
      shelf.$iphone.show();
    });

    $iphoneViewport.on('beforeChange', function(e,data){
      var $this = $(this);

      switch(data.$target[0]) {
        case shelf.$cta[0] :
          $(this).children().toggleClass('show',false);
        break;
        case shelf.$stream[0] :
          $(this).children().eq(1).toggleClass('show--hover',false);
          $(this).children().eq(0).toggleClass('show',true);

          setTimeout(function(){
            $this.children().eq(1).toggleClass('show--hover',true);
          },2000);
        break;
      }
    });

    shelf.$iphone.on('beforeChange',function(e,data){
      console.log('prev target is press: ',$prevTarget[0] == shelf.$press[0])

      switch(data.$target[0]) {
        case shelf.$press[0] :
          $(this).hide();
          break;
      }
    }).on('slideChanged',function(e,data){
      switch(data.$target[0]) {
        case shelf.$social[0] :
          if($prevTarget[0] == shelf.$press[0]) {
            $(this).show();
          }
          break;
      }
    });


    $nav.on('click','.js-scrollto',function(e){
      e.preventDefault();
      /*
        Grab the #name of the link clicked, parse it, then scroll to it.
        Pass the target element along.
      */
      var $target = $(this.hash),
          currentActive = $(this).parent().hasClass('.list__item--selected') ? $target : $(this).parent().siblings('.list__item--selected').children('a')[0].hash;
          $prevTarget = $(currentActive);

      $target = $target.length ? $target : $('[name=' + this.hash.slice(1) +']');

      FANCY.autoScroll($target,$prevTarget);
    });

    /*
      because of z-indexing the user can't directly interact with the fixed iphone.
      there is a .iphone.cloaked for the necessary shelves that the user actually interacts with.
      hence, phantom hovering.
    */
    $('.js-phantom-hover').on('mouseenter', function(){
      $iphoneViewport.children().eq(1).toggleClass('show--hover',false);
    }).on('mouseleave',function(){
      $iphoneViewport.children().eq(1).toggleClass('show--hover',true);
    });

    $('.js-cta').on('click',function(e){
      e.preventDefault();

      $('.js-popup--sms').toggleClass('hidden');
    });
  });
</script>


<script>
  // Twitter widget -->
  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");

  // Facebook widget -->
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '<%= Settings::Facebook.facebook_app_id %>', // App ID
      channelURL : '//shelby.tv/channel.html', // Channel File
      status     : true, // check login status
      cookie     : true, // enable cookies to allow the server to access the session
      oauth      : true, // enable OAuth 2.0
      xfbml      : true  // parse XFBML
    });

    FB.getLoginStatus(function (response) {
        if (response.status === 'connected') {
            $('.shelf--cta').removeClass('shelf--facebook-logged-out');
        } else if (response.status === 'not_authorized') {
            $('.shelf--cta').removeClass('shelf--facebook-logged-out');
        } else {
            // the user isn't logged in to Facebook. so keep the facepile hidden
        }
    });
  };

  // Load the SDK Asynchronously
  (function(d){
     var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}
     js = d.createElement('script'); js.id = id; js.async = true;
     js.src = "//connect.facebook.net/en_US/all.js";
     d.getElementsByTagName('head')[0].appendChild(js);
   }(document));

  // G +1 widget -->
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>

<% # VANITY A/B TESTING %>
<%= vanity_js %>
<% experiments = vanity_experiments %>
<% unless experiments.empty? %>
  <script>
    <% experiments.each do |name, alternative| %>
      try {
        _gaq.push(['_trackEvent', 'ab-testing', '<%= name %>', '<%= alternative.value %>']);
        _kmq.push(["set", {"<%= name %>": "<%= alternative.value %>"}]);
      } catch(e) {}
    <% end %>
  </script>
<% end %>
