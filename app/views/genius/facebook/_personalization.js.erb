$('document').ready(function(){
  $('#searches-from-likes a, #recommended-searches a').live('click', function(){
    var search = $(this).text();

    $('body').addClass('loading');

    var params = {
	    "q" : search,
    	"max-results" : "50",
      "orderby" : "relevance"
    };

  	// Create a callback
    var cb = function(res){
    	// Create array of returned YouTube video URLs
    	var urls = new Array();
			res.forEach(function(r){
				if (r.link != undefined) {
				  r.link.forEach(function(l){
				  	if(l.rel != undefined && l.rel == "alternate") {
					    if(l.href != undefined) {
					      urls.push(l.href);
  					  }
				  	}
				  });	
				}
			});
      
			// Get Shelby API to create genius roll based on URLs -- XXX this needs error checking
			var _rollUrl = 
			$.post('<%= "#{Settings::ShelbyAPI.url}#{Settings::ShelbyAPI.version}" %>' + '/roll/genius', {'search': search, 'urls': JSON.stringify(urls)}, function(data){
			  if (data.status == 200){
					var _rollUrl = '<%= Settings::Application.fb_genius_url %>' + "/fb/genius/roll/" + data.result.id;
  			  if (window.cache){
  					var _searchHistory = window.cache.get('searchHistory');
  					_searchHistory[search] = _rollUrl;
  					cache.set('searchHistory', _searchHistory);
  				}
  				window.location.href = _rollUrl;
				}
				else{ alert("something went wrong."); }
			});
    }; 
    // Call ytQuery.query, passing params and your callback
    ytQuery.query(params, cb);
    
  });
});