<% /* TODO: REMOVE THIS and MOVE TO template param obj*/ var messages = (frame.get('conversation') && frame.get('conversation').get('messages')) || new Backbone.Collection() %>

<% var user = shelby.models.user %>
<% var userNickname = user.get('nickname') %>

<% var video = frame.get('video') %>
<% var videoId = frame.get('id') %>
<% var videoTitle = video.get('title') %>
<% var videoThumbnail = video.get('thumbnail_url') %>

<% var creator = frame.get('creator') %>
<% var frameHasRoll = frame.has('roll') %>
<% var isGenius = frameHasRoll && frame.get('roll').get('genius') %>
<% var isViaSearch = (shelby.models.guide.get('displayState') == libs.shelbyGT.DisplayState.search) ? true : false %>

<% var frameIsOnHeartedRoll = !user.get('anon') && frame.isOnRoll(user.get('heart_roll_id')) %>
<% var frameIsOnWatchLaterRoll = !user.get('anon') && frame.isOnRoll(user.get('watch_later_roll_id')) %>
<% var frameViewed = frameGroup.get('collapsed') %>
<% var videoUnplayable = frameGroup.get('video_unplayable') %>
<% var userIsAnonymous = user.isAnonymous() %>
<% var framePermalink = libs.shelbyGT.viewHelpers.frame.permalink(frame) %>

<!-- videocard -->
<article id="<%= videoId %>" class="animate_module frame frame-list-item<%= (frameViewed) ? ' frame-collapsed' : ''%><%= (videoUnplayable) ? ' xvideo-unplayable' : ''%><%= (isViaSearch) ? ' via-search' : '' %><%= (frame.get('isFreshPlayNew')) ? ' fresh-play-new' : '' %>">
  <% if (!frameViewed) { %>
    <a href="#" onclick="return false;" class="frame-header js-frame-activate">
      <h1 class="frame-title" title="<%= videoTitle %>">
       <%= videoTitle %>
      </h1>
    </a>
  <% } %>

  <div class="frame-body-wrapper clearfix<%= (frameViewed) ? ' js-frame-activate' : ''%>">
    <div class="frame-body">
      <div class="menu_module frame-menu">
        <ul class="menu_list frame-command-menu frame-list" role="menubar">
          <li class="menu_item" role="menuitem">
            <button class="button_primer button_default frame-command command-roll js-roll-frame js-track-event" data-ga_category="Frame" data-ga_action="Click roll" data-ga_label="<%= userNickname %>">
              <i class="icon_primer icon-videocard_roll">
              </i>
                Roll…
            </button>
          </li>

          <!-- ab test -->
          <li class="menu_item" role="menuitem">
            <button class="button_primer frame-command command-queue
                           <%= shelby.models.guide.get('displayState')==='watchLaterRoll' ? 'remove-frame js-remove-frame ' : 'js-queue-frame '%>
                           <%= (queuedVideosModel.videoIsInQueue(video) ) ? ' queued button_gray-light' : ' button_default' %>">
              <i class="icon_primer icon-<%= (shelby.models.user.isAnonymous() && shelby.abTests) ? shelby.abTests.heartQueueComparison : "videocard_queue" %>">
              </i>

              <span class="label">
                <% if (shelby.models.user.isAnonymous() && shelby.abTests && shelby.abTests.heartQueueComparison == 'heart') { %>
                  Like
                <% } else { %>
                  <%= (shelby.models.guide.get('displayState')==='watchLaterRoll') ? 'Remove' :
                      (queuedVideosModel.videoIsInQueue(video) ) ? 'Queued' : 'Queue'
                  %>
                <% } %>
              </span>
            </button>
          </li>
          <!-- /ab test -->

          <% if (creator===shelby.models.user || shelby.models.guide.get('displayState')==='watchLaterRoll' || shelby.models.user.get('admin')) { %>
            <li class="menu_item right" role="menuitem">
              <button class="button_primer <%= shelby.models.user.get('admin') ? 'button_red' : 'button_gray' %> frame-command command-remove js-remove-frame">
                <i class="icon_primer icon-cancel"></i>
              </button>
            </li>
          <% } %>

        </ul>
      </div><!-- eo .frame-menu -->

      <!-- TODO: should maybe use the thumbnail module JST -->
      <a href="#" onclick="return false;" class="image_module frame-thumbnail js-frame-activate<%= (!videoThumbnail) ? ' missing-thumbnail' : '' %>" style="background-image: url('<%= videoThumbnail %>');" role="img">
        <img class="visuallyhidden" src="<%= videoThumbnail %>" title="<%= videoTitle %>" alt="<%= videoTitle %> thumbnail">
      </a>
      <div class="xvideo-unplayable-thumbnail-overlay">⏏<br/>unplayable</div>

      </div><!-- eo .frame-body -->

    <% if (!isGenius && creator) {
         var creatorNickname = creator.get('nickname');
         var creatorAvatar = libs.shelbyGT.viewHelpers.user.avatarUrl(creator);
         var clickableCreator = (shelby.models.guide.get('displayState') == libs.shelbyGT.DisplayState.dashboard ||
                                                                            frameIsOnHeartedRoll ||
                                                                            frameIsOnWatchLaterRoll);
    %>
      <footer class="media_module frame-footer clearfix">

        <% if (!frameViewed) { %>
           <% if (clickableCreator) { %>
             <a href="#" onclick="return false;" class="js-creator-personal-roll">
               <span class="image_module xuser-avatar media_image" style="background-image: url(<%= creatorAvatar %>);" role="img">
                 <img src="<%= creatorAvatar %>" class="visuallyhidden" title="<%= creatorNickname %>" alt="<%= creatorNickname %>">
               </span>
             </a>
           <% } else { %>
             <span class="image_module xuser-avatar media_image" style="background-image: url(<%= creatorAvatar %>);" role="img">
               <img src="<%= creatorAvatar %>" class="visuallyhidden" title="<%= creatorNickname %>" alt="<%= creatorNickname %>">
             </span>
           <% } %>
        <% } %>

        <div class="media_body">
          <% if (!frameViewed) { %>
            <span class="xuser-data-timestamp">
               <%= frame.get('created_at') %>
            </span>

            <p class="xuser-data">
              <% if (clickableCreator) { %>
                shared by <a href="#" onclick="return false;" class="js-creator-personal-roll no-faux-link"><strong><%= creatorNickname %></strong></a>
              <% } else { %>
                shared by <%= creatorNickname %>
              <% } %>
            </p>

            <p class="xuser-message">
              <% if(messages.models.length > 0 && creator.get('id') == messages.models[0].get('user_id')) { %>
                <% var comment = messages.models[0].escape('text') %>
                <% if (comment.length > 256) { %>
                  <%= comment.slice(0,256) %><span class="xuser-message-remainder" style="display: none"><%= comment.slice(256) %></span>
                  <a class="js-toggle-comment" href="#">more…</a>
                <% } else { %>
                  <%= comment %>
                <% } %>
              <% } %>
            </p>
          <% } else { %>
            <a href="#" onclick="return false;" class="frame-header js-frame-activate">
              <h1 class="frame-title" title="<%= videoTitle %>">
               <%= videoTitle %>
              </h1>

              <div class="xuser-data">
                shared by <%= creatorNickname %><%= !_(dupeFrames).isEmpty() ? ", " + _('other').pluralize(dupeFrames.length, true) : '' %>
              </div>
            </a>
          <% } %>
        </div><!-- eo .media_body -->

        <% if (!user.isAnonymous() && !frameViewed) { %>
          <hr class="hr--double" />
          <div class="frame-subsection clearfix">
            <ul class="menu_list">
              <li class="menu_item" role="menuitem">
                <div class="frame-command-wrapper icon_primer icon-shortlink">
                  <button class="frame-command command-link js-copy-link">
                    Get Shortlink
                  </button>
                </div>
                <!-- This button is changed into an input element by frame_group.view.js#_copyFrameLink -->
              </li>

              <li class="menu_item" role="menuitem">
                <div class="frame-command-wrapper icon_primer icon-email">
                  <button class="frame-command command-share js-share-frame">
                    Email…
                  </button>
                </div>
              </li>
            </ul><!-- eo .menu_list -->
          </div>
        <% } %>

        <% if (user.isAnonymous() && (shelby.models.guide.get('displayState') !== libs.shelbyGT.DisplayState.channel)) { %>
          <ul class="menu_list menu_list--share-frame">
            <%= SHELBYJST['frame-social-sharing']({isViaSearch: isViaSearch, framePermalink: framePermalink, frameHasRoll: frameHasRoll, frame: frame}) %>
          </ul>
        <% } %>
      </footer><!-- eo .media_module-->
    <% } else if (frameViewed){ %>
      <footer class="media_module frame-footer clearfix">
        <div class="media_body">
          <a href="#" onclick="return false;" class="frame-header js-frame-activate">
            <h1 class="frame-title" title="<%= videoTitle %>">
             <%= videoTitle %>
            </h1>
          </a>
        </div>
      </footer><!-- eo .media_module-->
    <% } else if (isViaSearch && userIsAnonymous) { %>
      <footer class="media_module frame-footer clearfix">
        <%= SHELBYJST['frame-social-sharing']({isViaSearch: isViaSearch, framePermalink: framePermalink, frameHasRoll: frameHasRoll, frame: frame}) %>
      </footer>
    <% } %>
  </div><!-- eo .frame-body-wrapper -->
  <% if (!frameGroup.get('collapsed') && !_(dupeFrames).isEmpty()) { %>
    <aside class="frame-aside">
      <p class="frame-aside-text">
        Also via:

        <% _(dupeFrames).each(function(frame, index) { %>
          <%= index == 0 ? '' : ', ' %>
          <a href="#" data-roll_id="<%= frame.get('roll').id %>" data-frame_id="<%= frame.id %>" class="js-go-to-frame-and-roll-by-id">
          <%= libs.shelbyGT.viewHelpers.roll.titleForDisplay(frame.get('roll')) %>
          </a>
        <% }); %>
      </p>
    </aside>
  <% } %>

	<% if(frame.get('isFreshPlayNew')){ %>
		<div class="sash">New</div>
	<% } %>

</article>
<!-- end new videocard -->
