//------------------------------------------------------------------------------
//  Button Primer
//------------------------------------------------------------------------------
.button_primer {
    border-radius: 3px;
    font-family: Arial, sans-serif;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;

    &:not([disabled]):not(.disabled):not(.visuallydisabled):hover {
        cursor: pointer;
    }

    &.visuallydisabled,
    &.disabled {
        cursor: default;
    }

    &:not([disabled]):not(.disabled):not(.visuallydisabled):focus {
        border: 1px solid black;
        outline: none;
    }
}

.faux_button {
    display: inline-block;

    &:active,
    &:hover,
    &:link,
    &:visited {
        text-decoration: none;
    }
}

// modifier, for specific uses.
@mixin button-sizing($use: generic) {
    @if $use == frame-command {
    padding-top: .8em;
    padding-right: 1em;
    padding-bottom: .75em;
    padding-left: 1em;
  } @elseif $use == explore-rolls {
    padding-top: .8em;
    padding-bottom: .75em;
    //------------------------------------------------------
    //  follow/unfollow need to be the same size.
    //  setting the WIDTH normalizes them,
    //  rather than having the width delegated by the padding
    //------------------------------------------------------
    width: 100px;
  } @elseif $use == wide {
    padding-top: .8em;
    padding-right: 3em;
    padding-bottom: .75em;
    padding-left: 3em;
  } @elseif $use == guide-close {
    padding: .6em;
  } @elseif $use == generic {//generic
    padding-top: .8em;
    padding-right: 1em;
    padding-bottom: .75em;
    padding-left: 1em;
  }
}

$color-names:
blue       ,
default    ,
gray       ,
gray-light ,
gray-medium,
green      ,
purple     ,
red        ,
yellow     ;

$color-values:
#0590c4,
#eeeeee,
#27292A,
#a0a0a0,
#dddddd,
#428e3a,
#693a7b,
#cc1235,
#d5cd39;

@function value-primer($name) {
   @return nth($color-values, index($color-names, $name));
}

@each $name in $color-names {
  .button_#{$name} {
    $base: value-primer($name);

    background: $base;
    border: 1px solid darken($base,25%);
    box-shadow: inset 0 1px 0 0 lighten($base, 20%), //inner top hightlight
                inset 0 -1px 0 0 darken($base, 5%);
    color: darken($base, 50%);

    &:not([disabled]):not(.disabled):not(.visuallydisabled):hover {
        $base-hover: lighten($base, 5%);

        background: lighten($base-hover,5%);
        border: 1px solid lighten($base-hover,2%);
        box-shadow: inset 0 1px 0 0 lighten($base-hover, 20%), //inner top hightlight
                    inset 0 -1px 0 0 darken($base-hover, 5%);
    }

    &:not([disabled]):not(.disabled):not(.visuallydisabled):active {
        $base-active: darken($base, 5%);

        background: darken($base-active, 10%);
        border: 1px solid darken($base-active, 50%);
        box-shadow: inset 0 1px 0 0 lighten($base-active, 20%), //inner top hightlight
                    inset 0 -1px 0 0 darken($base-active, 5%);
    }

    &[disabled],
    &.disabled {
        color: darken($base, 30%);
    }

    &:visited {
        color: darken($base, 50%);
    }

    &.disabled {
       &:active,
       &:hover,
       &:link,
       &:visited {
        color: darken($base, 30%);
       }
    }
  }//eo .button_#{$name}
}
//---------------------------
//  EXPERIMENTAL:
//  should arbitrary button get a class that gives it its color?
//  i.e.: <button class="form_submit submit-share shelby-blue">Submit</button>
//---------------------------

$list : blue, green, default, gray, gray-light, gray-medium, red, yellow;
@each $color in $list {
  .shelby-#{$color} {
    @include loopable-button-primer($color);
  }
}

//---------------------------
//  TODO: fix this list shit 
//---------------------------

.list,
.rolls-list,
.form-rolls-list,
.existing-rolls-list > ul {
  margin: 0;
  padding: 0;

  li {
    list-style-type: none;  
    &:first-child {
      .xframe {
        border-top: none;
      }
    }
  }
}

//---------------------------
//  animation module 
//---------------------------

.animate_module,
.animate-easein {
  @include animate;
}

//---------------------------
//  media module, what up! 
//  thanks to @stubbornella.
//---------------------------

.media_module {
  margin : $media-module-margin;
  position : relative;
}

.media_body,
.media_image {
  overflow: hidden;
  zoom: 1;
}

.media_image {
  float: left;
  margin-right: 10px;
}

.media_body {
  p {
    margin: 0 0 .5em 0;
  }
}

//---------------------------
//  modular image
//---------------------------

.image_module {
  @include background-size(cover);

  background-color: $thumbnail_default_bg;
  background-position: center center;
  background-repeat: no-repeat;
  display: block;
}

//---------------------------
//  modular menu framework
//  menu appears in the frame
//---------------------------

.menu_module {
  display: none;
}

.menu_list,
.menu_sublist {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.menu_sublist {
  display: none;
  width: 106px;
}

.menu_item:hover {
  .menu_sublist{
    display: block;
  }
}

.menu_item {
  float: left;

  &.right {
    float: right;
    //float LI to the right
    text-align: right;
    //child el (button) is display:inline by default,
    //this is like a fake float right
    //makes the sublist margin effective.
  }
}

//------------------------------------------------------------------------------
//  modular list framework
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////
//  GROUP_LIST_MODULE is a super list
//  for when you have nested lists.
//
//  LIST_MODULE handles lists in the guide
//  lists of rolls, frame, etc.
//
//  (right now they're both the same.)
////////////////////////////////////////////////////////////////////////////
.group_list_module,
.list_module {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.list_item {
}

.list_button {

  &:hover {
    background-color: $list-item-bg-hover;
  }
}

//---------------------------
//  modular overlay framework
//  
//    two main parts:
//    header and body.
//    this abstraction is a primer for
//    the content separation.
//
//    *used for any overlay,
//     that slides over the guide    
//---------------------------
.overlay_header {
  height: $overlay_header_height;
}

.overlay_body {
  bottom: 0;
  position: absolute;
  overflow-y: auto;
  top: $overlay_header_height;
  width: 100%;
}
//------------------------------------------------------------------------------
//  modular form framework
//
//    base styling to make any/all
//    inputs consistent throughout
//    the entire app
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////
//  VERTICAL FORMS
////////////////////////////////////////////////////////////////////////////
.form_module {

}

.form_fieldset {
  margin-top: 1em;
}

.form_legend {

}

.form_label {
  font-family: $font-family-display;
  font-size: 1em;
  font-weight: 400;
  display: block;
  line-height: 1.75;
}

.form_input,
.form_textarea {
  @include roundies(input);
  @include transition-property('border');
  @include transition-duration(0.25s);
  @include transition-timing-function(ease-in);

  border: 1px solid adjust-lightness($inset, -15%);
  display: block;
  font-size: 1.2em;
  padding: .5em;
  width: 100%;

  &:focus {
    outline: none;
    border: 1px solid adjust-lightness($inset, -50%);
  }
}

.form_textarea_subline {
  margin: .25em 0 0;
  opacity: .5;
  text-align: right;
}

.form_input {
//  margin-bottom: 1em;
}

.form_textarea {

}

////////////////////////////////////////////////////////////////////////////
//  HORIZONTAL FORMS
//
//  horizontal forms are less often used.
//  instead of having horizontal be its own full set,
//  we're going to try to make the horizontal styles an override
//  thus making it a subclass of the standard vertical forms.
////////////////////////////////////////////////////////////////////////////
.form_module_horz {

  .form_fieldset {

  }

  .form_legend {

  }

  .form_label {

  }

  .form_label {

  }

  .form_input,
  .form_textarea {

  }

  .form_input {

  }

  .form_textarea {

  }
}

////////////////////////////////////////////////////////////////////////////
//  SHARED BY HORIZONTAL + VERTICAL FORMS
////////////////////////////////////////////////////////////////////////////
.form_submit {
  @include button-primer($shelby-blue, dark, wide);

  .spinner {
    left: auto;
    margin-left: -4px;
    margin-top: -2px;   
    position: relative;
  }

  &:hover {
    @include button-primer(adjust-lightness($shelby-blue,5%), dark, wide);
  }

  &:active {
    @include button-primer(adjust-lightness($shelby-blue,-5%), dark, wide);
  }
}

//---------------------------
//  share form framework
//
//    TODO: make share_module a sub-class of form_module
//---------------------------

.share_module {

}

.share_label {
  float: left;
  margin-right: 5px;
}

.share_label_icon {
  display: block;
  float: left;
  height: 30px;
  width: 30px;
}

.share_input {

}

.share_input:checked {

}

//---------------------------
//  dropdown framework
//  used in header nav
//
//    contextless-abstraction, 
//    any/all hoverable dropdowns should
//    use the the dropdown_module
//
//    1. dropdown_button and dropdown_section are siblings
//    2. dropdown_icon is the child icon of dropdown_button,
//       indicates that button is a dropdown
//---------------------------

.dropdown_module {
  position: relative;

  &:hover {
    .dropdown_section {
      display: block;
    }
  }
}

.dropdown_button {
}
  .dropdown_icon {
    background-image: url($icon-carrot);
    background-repeat: no-repeat;
    background-position: right center;
    font-style: normal;
    padding-right: 1em;
  }

.dropdown_section {
  display: none;
  position: absolute;
  z-index: 4;
}

.dropdown_lining {
  position: relative;
  //DO NOT SET AN MARGIN/PADDING OFFSET HERE.
  //Offsets are stylistic and relative to a particlar context
  //i.e. class="dropdown_lining nowplaying-section-lining",
  //.nowplaying-section-lining applies offset.
}

//---------------------------
//  social-login framework
//---------------------------

.social_login {
}

.social_login_twitter,
.social_login_facebook {
  display: block;
  float: left;
  padding: 0 3px 0 20px;
  text-align: center;
  text-decoration: none;
  width: 100px; 

  &:before {
    width: 36px;
  }
  &:visited {
    color: #efefef;
  }
}

.social_login_twitter {
  @include x-logged-out-networks-buttons($twitter-blue);

  margin-right: 20px;
  
  &:before{
    background-image: url($icon-share-twitter-on);
    background-position: 30% 50%;
    background-size: 82%;
  }

  &:hover {
    @include x-logged-out-networks-buttons(adjust-lightness($twitter-blue, 5%));
  }

  &:active {
    @include x-logged-out-networks-buttons(adjust-lightness($twitter-blue, -5%));
  }
}

.social_login_facebook {
  @include x-logged-out-networks-buttons($facebook-blue);

  &:before{
    background-image: url($icon-share-facebook-on);
    background-position: 30% 50%;
    background-size: 72%;
  }

  &:hover {
    @include x-logged-out-networks-buttons(adjust-lightness($facebook-blue, 5%));
  }

  &:active {
    @include x-logged-out-networks-buttons(adjust-lightness($facebook-blue, -5%));
  }
}

